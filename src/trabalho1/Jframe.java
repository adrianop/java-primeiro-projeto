/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho1;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import twitter4j.Twitter;

/**
 *
 * @author almei
 */
public class Jframe extends javax.swing.JFrame {

    /**
     * Creates new form Jframe
     */
    private boolean runtimecount = true;
    
    Sensor s;
   
    
    
    public Jframe() throws ClassNotFoundException, InstantiationException, IllegalAccessException {
   
        
        initComponents();
        
    }

  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar2 = new javax.swing.JProgressBar();
        name = new javax.swing.JLabel();
        sensorId = new javax.swing.JLabel();
        sensorName = new javax.swing.JLabel();
        update = new javax.swing.JLabel();
        textNameDriver = new javax.swing.JTextField();
        textId = new javax.swing.JTextField();
        textName = new javax.swing.JTextField();
        textUpdate = new javax.swing.JTextField();
        buttonInicializar = new javax.swing.JButton();
        buttonIniciar = new javax.swing.JButton();
        buttonParar = new javax.swing.JButton();
        buttonSalvar = new javax.swing.JButton();
        barraDeProgresso = new javax.swing.JProgressBar();
        nameRight = new javax.swing.JLabel();
        SensorIdRight = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        exitId = new javax.swing.JLabel();
        exitName = new javax.swing.JLabel();
        exitStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        name.setText("Nome do Driver:");

        sensorId.setText("SensorId:");

        sensorName.setText("SensorName: ");

        update.setText("Update (seconds): ");

        textNameDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameDriverActionPerformed(evt);
            }
        });

        textId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIdActionPerformed(evt);
            }
        });

        textName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameActionPerformed(evt);
            }
        });

        textUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUpdateActionPerformed(evt);
            }
        });

        buttonInicializar.setText("Inicializar");
        buttonInicializar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonInicializarMouseClicked(evt);
            }
        });
        buttonInicializar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInicializarActionPerformed(evt);
            }
        });

        buttonIniciar.setText("Iniciar");
        buttonIniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonIniciarMouseClicked(evt);
            }
        });
        buttonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIniciarActionPerformed(evt);
            }
        });

        buttonParar.setText("Pausar");
        buttonParar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonPararMouseClicked(evt);
            }
        });
        buttonParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPararActionPerformed(evt);
            }
        });

        buttonSalvar.setText("Salvar");
        buttonSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSalvarMouseClicked(evt);
            }
        });
        buttonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalvarActionPerformed(evt);
            }
        });

        barraDeProgresso.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                barraDeProgressoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        nameRight.setText("Sensor Name:");

        SensorIdRight.setText("Sensor Id:");

        status.setText("Status:");

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        jLabel8.setText("Trabalho1 PO  Adriano Pertiline e Leonardo Almeida");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonSalvar)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sensorName)
                                            .addComponent(update))
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(247, 247, 247))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(name)
                                            .addComponent(sensorId))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textNameDriver, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                            .addComponent(textId))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(status)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(exitStatus))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(SensorIdRight)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(exitId))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameRight)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(exitName)))))
                        .addGap(337, 337, 337))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(buttonInicializar)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonIniciar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(buttonParar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(barraDeProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1)
                            .addGap(50, 50, 50)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name)
                            .addComponent(textNameDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SensorIdRight)
                            .addComponent(exitId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorId)
                            .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sensorName)
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameRight)
                            .addComponent(exitName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(status)
                            .addComponent(exitStatus))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update)
                            .addComponent(textUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonInicializar)
                            .addComponent(buttonIniciar)
                            .addComponent(buttonParar)))
                    .addComponent(barraDeProgresso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(buttonSalvar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonInicializarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInicializarActionPerformed
         
       if(textNameDriver.getText().equals("SensorRand")){
           try {
               this.s =   (Sensor)Class.forName("trabalho1.SensorRand").newInstance();
               textId.setText("Sensor001");
               textName.setText("energia motor 1");
           } catch (ClassNotFoundException ex) {
               Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
           } catch (InstantiationException ex) {
               Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IllegalAccessException ex) {
               Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
           }
           
       }
       
       Thread ta = new Thread(new Runnable() {
            @Override
            public void run() {
                
                {
                   jLabel8.setText(textNameDriver.getText());
                
                }
            }
            }); ta.start();
            
       
        if(textNameDriver.getText().equals("SensorRand2")){
           try {
               this.s =   (Sensor)Class.forName("trabalho1.SensorRand2").newInstance();
               textId.setText("Sensor002");
               textName.setText("energia motor 2");
               
               
           } catch (ClassNotFoundException ex) {
               Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
           } catch (InstantiationException ex) {
               Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IllegalAccessException ex) {
               Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
           }

            Thread tb = new Thread(new Runnable() {
            @Override
            public void run() {
                
                {
                   jLabel8.setText(textNameDriver.getText());
                
                }
            }
            }); tb.start();
            
        }
       
        
        exitId.setText(textNameDriver.getText());
        exitName.setText(textName.getText());
        exitStatus.setText("Runnig");
        s.setId(textNameDriver.getText());
        s.setName(textName.getText());
    }//GEN-LAST:event_buttonInicializarActionPerformed

    private void buttonPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPararActionPerformed
     
    if(runtimecount==true){    
         exitStatus.setText("Stopped");
         runtimecount=false;
    }
              
           
       
    }//GEN-LAST:event_buttonPararActionPerformed

    private void buttonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalvarActionPerformed
           
        
        
     while (true){
         File file = new File("dados salvos");
           file.mkdir();
           SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy hh-mm");
           
            
           file.mkdir();
           try {
               
                   
              
               PrintWriter dados = new PrintWriter("dados salvos/dados"+" "+sdf.format(new Date())+".txt");
               BufferedWriter grava = new BufferedWriter(new PrintWriter(dados));
        
               // dados.println(s.getValue());
                // dados.println(textArea.getText());
             PrintWriter append = dados.append(textArea.getText()+ " \n ");
                grava.close();
                dados.close();
               
           }  catch(IOException ex){
           }
           
    }//GEN-LAST:event_buttonSalvarActionPerformed
    }
    private void textNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameActionPerformed
      
    }//GEN-LAST:event_textNameActionPerformed

    private void textNameDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameDriverActionPerformed
     
    }//GEN-LAST:event_textNameDriverActionPerformed

    private void buttonIniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonIniciarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonIniciarMouseClicked

    private void buttonPararMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPararMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPararMouseClicked

    private void buttonInicializarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInicializarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonInicializarMouseClicked

    private void buttonSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSalvarMouseClicked
    
    
    }//GEN-LAST:event_buttonSalvarMouseClicked

    private void textIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIdActionPerformed

    }//GEN-LAST:event_textIdActionPerformed

    private void textUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUpdateActionPerformed

    }//GEN-LAST:event_textUpdateActionPerformed
    
    private void buttonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIniciarActionPerformed
      
        if(runtimecount==false){    
            exitStatus.setText("Runnig");
            runtimecount=true;
        }
        
        Thread t2 = new Thread(new Runnable() {
            @Override
            public void run() {
                while(runtimecount == true){
                    
                   
                    textArea.append("Time : " + System.currentTimeMillis() +" " + s.toString() + " "  + (String.valueOf(s.getValue()))+ " \n");
                    
                    int valor = (int) s.getValue();
                  
                    
                    barraDeProgresso.setValue(valor);
                    barraDeProgresso.setString(valor + "%");
                    barraDeProgresso.setStringPainted(true);
                    
                    try {
                        int update = Integer.valueOf(textUpdate.getText());
                        Thread.sleep(update*1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        t2.start();
         
    }//GEN-LAST:event_buttonIniciarActionPerformed

    private void barraDeProgressoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_barraDeProgressoAncestorAdded
       
    }//GEN-LAST:event_barraDeProgressoAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Jframe().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Jframe.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    //Todas variáveis com exit... são as saídas do lado direito do frame.
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SensorIdRight;
    private javax.swing.JProgressBar barraDeProgresso;
    private javax.swing.JButton buttonInicializar;
    private javax.swing.JButton buttonIniciar;
    private javax.swing.JButton buttonParar;
    private javax.swing.JButton buttonSalvar;
    private javax.swing.JLabel exitId;
    private javax.swing.JLabel exitName;
    private javax.swing.JLabel exitStatus;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JLabel nameRight;
    private javax.swing.JLabel sensorId;
    private javax.swing.JLabel sensorName;
    private javax.swing.JLabel status;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField textId;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textNameDriver;
    private javax.swing.JTextField textUpdate;
    private javax.swing.JLabel update;
    // End of variables declaration//GEN-END:variables
}
